[{"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/reportWebVitals.js":"1","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/App.js":"2","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/index.js":"3","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/UserDetail.js":"4","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/HomeDetail.js":"5","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/TaskList.js":"6","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/GoalList.js":"7","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/NewTask.js":"8","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/MeetGoals.js":"9","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/ChartsPage.js":"10"},{"size":362,"mtime":1612140160904,"results":"11","hashOfConfig":"12"},{"size":5605,"mtime":1613521332410,"results":"13","hashOfConfig":"12"},{"size":715,"mtime":1613264481458,"results":"14","hashOfConfig":"12"},{"size":311,"mtime":1613461935892,"results":"15","hashOfConfig":"12"},{"size":1421,"mtime":1613445229059,"results":"16","hashOfConfig":"12"},{"size":2947,"mtime":1613469323756,"results":"17","hashOfConfig":"12"},{"size":5408,"mtime":1613468215590,"results":"18","hashOfConfig":"12"},{"size":4346,"mtime":1613521361493,"results":"19","hashOfConfig":"12"},{"size":7234,"mtime":1613508728401,"results":"20","hashOfConfig":"12"},{"size":1202,"mtime":1613470974000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13wnu5z",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/reportWebVitals.js",[],["47","48"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/App.js",["49","50","51","52"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/index.js",["53","54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { VictoryPie, VictoryTooltip } from 'victory';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["55","56"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/UserDetail.js",["57","58","59"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/HomeDetail.js",["60","61","62","63","64"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/TaskList.js",["65","66","67","68","69","70","71","72","73"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DateTime } from \"luxon\";\nimport { Form, ToggleButton, ButtonGroup, Button, Container, Col, Row } from 'react-bootstrap';\n\nconst TaskList = (props) => {\n    // sort by date\n    const allTasks = props.tasks.sort( function (a,b) {return new Date(b.date) - new Date(a.date)});\n    \n    // sort by category feature with checkboxes\n    const [radioValue, setRadioValue] = React.useState(\"All\");\n    \n    let tasks = (radioValue == \"All\" ? allTasks : allTasks.filter(task => ( task.category_id == radioValue)));\n    useEffect(() => {\n        console.log(radioValue);\n        if (radioValue == \"All\") {\n            tasks = allTasks} \n        else {\n            console.log(radioValue);\n            tasks = allTasks.filter(task => ( task.category_id == radioValue));  }\n    }, [radioValue])\n        \n    console.log (tasks);\n        // delete task option\n\n        \n    \n    return (\n        <div>\n        <Container>\n        <Row>\n            <Col> \n            <ButtonGroup toggle>\n                <ToggleButton \n                    type=\"radio\"\n                    name=\"radio\"\n                    value=\"All\"\n                    variant=\"outline-dark\"\n                    checked={radioValue === \"All\"}\n                    onChange={e => setRadioValue(e.currentTarget.value)}\n                >\n                    All\n                </ToggleButton>\n                {props.categories.map((category) => {return(\n                <ToggleButton\n                    key={category.id}\n                    type=\"radio\"\n                    name=\"radio\"\n                    value={category.id}\n                    variant=\"outline-dark\"\n\n                    checked={radioValue === category.id}\n                    onChange={e => setRadioValue(e.currentTarget.value)}\n                >\n                    {category.title}\n                </ToggleButton>\n                )})}\n            </ButtonGroup>\n            </Col>\n        </Row>\n        <Row>\n            <Col></Col>\n            <Col sm={12} md={8} > \n            \n            <ul className=\"text-left\">\n                {tasks.map((task) => {\n                    const categ = props.categories.filter(i => i.id === task.category_id);\n                    const assocGoal = props.goals.filter(i => i.id === task.goal_id);\n                    const dateFormatted = DateTime.fromHTTP(task.date).plus({ days: 1 }).toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY);\n    \n                    return (<li key={task.id}> <strong>{dateFormatted}: </strong> \n                    <p> Goal: {assocGoal[0].tag}\n                    <br/> Category: {categ[0].title}\n                    <br/> Details: {task.body} </p>\n                    <hr/>\n                    </li>)\n                })}\n            </ul>\n            </Col>\n            <Col></Col>\n        </Row>\n        </Container>\n        </div>)\n    }\n\nexport default TaskList;","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/GoalList.js",["74"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/NewTask.js",["75","76","77"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { DateTime } from \"luxon\";\nimport { Form, Button, Container, Col, Row, Alert } from 'react-bootstrap';\nimport { findAllByDisplayValue, render } from '@testing-library/react';\n\n\n\nconst NewTask = (props) => {\n    \n    // post request onClick method then redirect\n    const [show, setShow] = useState(false);\n    const AlertDismissibleExample = () => {\n        \n            if (show) {\n            return (\n                <Alert variant=\"dark\" onClose={() => setShow(false)} dismissible>\n                <Alert.Heading>Task Added!</Alert.Heading>\n                <p>\n                    Add more entries, or navigate to other pages to see your updated stats!\n                </p>\n                </Alert>\n            );\n            }\n    }\n        \n\n\n    const categories = props.categories.sort( function (a,b) {return a.title - b.title});\n    console.log(categories);\n\n    const goals = props.goals.sort( function (a,b) {return a.title - b.title});\n\n    const nowDT = DateTime.local();\n    const nowMonth = (nowDT.month < 10 ? `0${nowDT.month}` : nowDT.month);\n    \n\n    const [formFields, setFormFields] = useState({\n        'user_id': 1,\n        'category_id': 1,\n        'goal_id': 1,\n        'date': `${nowDT.year}-${nowMonth}-${nowDT.day}`,\n        'body': \"\"\n    });\n\n\n    console.log(formFields)\n\n    const onInputChange = event => {\n        console.log(`{${event.target.name}} field updated to ${event.target.value}`);\n        const newFormFields = {\n            ...formFields,\n        }\n\n        newFormFields[event.target.name] = event.target.value;\n        setFormFields(newFormFields);\n    };\n\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        console.log(`this would submit fields as: ${formFields.date} ${formFields.category_id}  ${formFields.goal_id} ${formFields.body}`);\n        axios.post('/tasks', formFields)\n        .then((response) => {\n            console.log(response);\n            props.taskRefreshCallback(props.taskRefresh + 1);\n            setShow(true);\n        })\n        .catch((error) => { \n            console.log(error.message);\n        })\n\n        \n        setFormFields({\n            'user_id': 1,\n            'category_id': 1,\n            'goal_id': 1,\n            'date': `${nowDT.year}-${nowMonth}-${nowDT.day}`,\n            'body': \"\"\n        })\n        \n}\n\n    return (   \n    <div>\n    <Container>\n    <Row>\n        <Col></Col>\n        <Col sm={12} md={8}>  \n        {AlertDismissibleExample()}\n        <Form onSubmit={onFormSubmit}>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Date</Form.Label>\n                <Form.Control name=\"date\" type=\"date\" placeholder=\"date\"  onChange={onInputChange} value={formFields.date}/>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Category</Form.Label>\n                <Form.Control name=\"category_id\" as=\"select\"  onChange={onInputChange} value={formFields.category_id} >\n                {categories.map((category) => {\n                    return (<option key={category.id} value={category.id}> {category.title}</option>)\n                })} \n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Form.Label>Goal</Form.Label>\n                <Form.Control name=\"goal_id\" as=\"select\" onChange={onInputChange} value={formFields.goal_id}>\n                {goals.map((goal) => {\n                    return (<option key={goal.id} value={goal.id}> {goal.tag} </option>)\n                })} \n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Details</Form.Label>\n                <Form.Control name=\"body\" as=\"textarea\" rows={3} onChange={onInputChange} value={formFields.body}/>\n            </Form.Group>\n            \n\n\n\n            <Button type=\"submit\" variant=\"dark\" >Submit form</Button>\n            {/* <Button type=\"submit\" variant=\"dark\" style={{ color: \"white\", background: \"#4b00ae\" }} >Submit form</Button> */}\n        \n        </Form>\n        </Col>\n        <Col></Col>\n    </Row>\n    </Container>\n    </div>\n    );\n}\n\nexport default NewTask;","/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/MeetGoals.js",["78","79","80","81","82","83","84"],"/Users/mackenzielofthus/Desktop/capstone/react-flask-app/src/components/ChartsPage.js",["85","86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":17,"column":10,"nodeType":"95","messageId":"96","endLine":17,"endColumn":22},{"ruleId":"93","severity":1,"message":"97","line":21,"column":10,"nodeType":"95","messageId":"96","endLine":21,"endColumn":19},{"ruleId":"93","severity":1,"message":"98","line":37,"column":10,"nodeType":"95","messageId":"96","endLine":37,"endColumn":23},{"ruleId":"93","severity":1,"message":"99","line":84,"column":10,"nodeType":"95","messageId":"96","endLine":84,"endColumn":19},{"ruleId":"93","severity":1,"message":"100","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":20},{"ruleId":"93","severity":1,"message":"101","line":10,"column":22,"nodeType":"95","messageId":"96","endLine":10,"endColumn":36},{"ruleId":"89","replacedBy":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"105","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"106","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"108","line":4,"column":31,"nodeType":"95","messageId":"96","endLine":4,"endColumn":35},{"ruleId":"93","severity":1,"message":"109","line":4,"column":37,"nodeType":"95","messageId":"96","endLine":4,"endColumn":48},{"ruleId":"93","severity":1,"message":"110","line":14,"column":11,"nodeType":"95","messageId":"96","endLine":14,"endColumn":16},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"106","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"93","severity":1,"message":"111","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"112","line":4,"column":43,"nodeType":"95","messageId":"96","endLine":4,"endColumn":49},{"ruleId":"113","severity":1,"message":"114","line":13,"column":29,"nodeType":"115","messageId":"116","endLine":13,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":13,"column":94,"nodeType":"115","messageId":"116","endLine":13,"endColumn":96},{"ruleId":"113","severity":1,"message":"114","line":16,"column":24,"nodeType":"115","messageId":"116","endLine":16,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":17,"column":21,"nodeType":"95","endLine":17,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":20,"column":64,"nodeType":"115","messageId":"116","endLine":20,"endColumn":66},{"ruleId":"93","severity":1,"message":"109","line":3,"column":51,"nodeType":"95","messageId":"96","endLine":3,"endColumn":62},{"ruleId":"93","severity":1,"message":"105","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"119","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":31},{"ruleId":"93","severity":1,"message":"120","line":5,"column":33,"nodeType":"95","messageId":"96","endLine":5,"endColumn":39},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"121","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":34},{"ruleId":"93","severity":1,"message":"122","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":62,"column":5,"nodeType":"125","messageId":"126","endLine":68,"endColumn":7},{"ruleId":"127","severity":1,"message":"128","line":62,"column":23,"nodeType":"129","messageId":"130","endLine":62,"endColumn":25},{"ruleId":"93","severity":1,"message":"131","line":137,"column":31,"nodeType":"95","messageId":"96","endLine":137,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":170,"column":72,"nodeType":"115","messageId":"116","endLine":170,"endColumn":74},{"ruleId":"93","severity":1,"message":"104","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"101","line":3,"column":21,"nodeType":"95","messageId":"96","endLine":3,"endColumn":35},{"ruleId":"93","severity":1,"message":"132","line":3,"column":37,"nodeType":"95","messageId":"96","endLine":3,"endColumn":49},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","'userCount' is assigned a value but never used.","'categoryCount' is assigned a value but never used.","'taskCount' is assigned a value but never used.","'VictoryPie' is defined but never used.","'VictoryTooltip' is defined but never used.",["133"],["134"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'DateTime' is defined but never used.","'Card' is defined but never used.","'ProgressBar' is defined but never used.","'tasks' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'tasks' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'findAllByDisplayValue' is defined but never used.","'render' is defined but never used.","'useMemo' is defined but never used.","'GoalProgress' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'categ' is assigned a value but never used.","'VictoryLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]